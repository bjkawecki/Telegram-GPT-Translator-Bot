name: Deploy Telegram Bot (Infra + Lambda Code)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-central-1
      S3_BUCKET: mirrowchanbot-bucket-bucket
      LAMBDA_ZIP_KEY: telegram_bot/lambda.zip
      TERRAFORM_DIR: terraform
      ACTIONS_STEP_DEBUG: true

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform init

      - name: Terraform Apply (Only S3, SSM Bot Token, API Gateway)
        working-directory: ${{ env.TERRAFORM_DIR }}
        env:
          TF_VAR_bot_token: ${{ secrets.BOT_TOKEN }}
          TF_VAR_code_bucket_name: ${{ secrets.CODE_BUCKET_NAME }}

        run: terraform apply -auto-approve -target=aws_s3_bucket.lambda_code_bucket -target=aws_ssm_parameter.bot_token -target=aws_apigatewayv2_api.webhook_api

      - name: Get API Gateway URL Output
        id: tf-output
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: echo "url=$(terraform output -raw api_gateway_url)" >> $GITHUB_OUTPUT

      - name: Write API Gateway URL to SSM Parameter Store
        run: |
          aws ssm put-parameter --name aws_ssm_parameter.api_gateway_url.name --value "${{ steps.tf-output.outputs.url }}" --type String --overwrite

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Build Lambda ZIP package
        run: |
          pip install -r lambda/requirements.txt --target lambda/package/
          cd lambda/package && zip -r9 ../../lambda.zip .
          cd ../ && zip -g lambda.zip bot_handler.py

      - name: Upload Lambda ZIP to S3
        run: |
          aws s3 cp lambda.zip s3://${{ env.S3_BUCKET }}/${{ env.LAMBDA_ZIP_KEY }}

      - name: Terraform Apply (Lambda Code Deploy)
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform apply -auto-approve -target=aws_lambda_function.telegram_bot_lambda
